package partials

import (
	"fmt"
	"github.com/meetnearme/api/functions/lambda/go/seshu/shared"
)

templ EventCandidatesPartial(eventCandidates []shared.EventInfo) {
	<form class="group" novalidate>
		<div role="alert" class="alert alert-info mt-3 mb-11">
			Mark each field such as "title" and "location" as correct or incorrect with the adjacent toggle. If the proposed event is not an event, toggle "This is an event" to "This is not an event".
		</div>
		<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
			for index, candidate := range eventCandidates {
				<div class="checkbox-card card card-compact shadow-lg">
					<div class="checkbox-card-header bg-success content-success has-toggleable-text">
						<label class="label cursor-pointer justify-normal">
							<input id={ "main-toggle-" + fmt.Sprint(index) } type="checkbox" class="toggle mr-4" onclick="this.parentNode.parentNode.parentNode.querySelectorAll('input.toggle').forEach(item => item.checked = this.checked)" checked/>
							<span class="label-text flex contents">This is <strong class="hidden-when-checked">not </strong>an event</span>
						</label>
					</div>
					<div class="card-body">
						<h2 class="card-title">{ candidate.EventTitle }</h2>
						<p>
							<label for={ "cand_title_" + fmt.Sprint(index) } class="label items-start justify-normal cursor-pointer">
								<input
									name={ "cand_title_" + fmt.Sprint(index) }
									type="checkbox"
									class="toggle toggle-sm toggle-success -mb-1 mr-2"
									if len(candidate.EventTitle) > 0 {
										checked
									}
								/><span class="label-text"><strong>Title:</strong> { candidate.EventTitle }</span>
							</label>
						</p>
						<p>
							<label for={ "cand_location_" + fmt.Sprint(index) } class="label items-start justify-normal cursor-pointer">
								<input
									name={ "cand_location_" + fmt.Sprint(index) }
									type="checkbox"
									class="toggle toggle-sm toggle-success -mb-1 mr-2"
									if len(candidate.EventLocation) > 0 {
										checked
									}
								/><span class="label-text"><strong>Location:</strong> { candidate.EventLocation }</span>
							</label>
						</p>
						<p>
							<label for={ "cand_date_" + fmt.Sprint(index) } class="label items-start justify-normal cursor-pointer">
								<input
									name={ "cand_date_" + fmt.Sprint(index) }
									type="checkbox"
									class="toggle toggle-sm toggle-success -mb-1 mr-2"
									if len(candidate.EventDate) > 0 {
										checked
									}
								/><span class="label-text"><strong>Date:</strong> { candidate.EventDate }</span>
							</label>
						</p>
						<p>
							<label for={ "cand_url_" + fmt.Sprint(index) } class="label items-start justify-normal cursor-pointer">
								<input
									name={ "cand_url_" + fmt.Sprint(index) }
									type="checkbox"
									class="toggle toggle-sm toggle-success -mb-1 mr-2"
									if len(candidate.EventURL) > 0 {
										checked
									}
								/><span class="label-text"><strong>URL:</strong> { candidate.EventURL }</span>
							</label>
						</p>
						<p>
							<label for={ "cand_description_" + fmt.Sprint(index) } class="label items-start justify-normal cursor-pointer">
								<input
									name={ "cand_description_" + fmt.Sprint(index) }
									type="checkbox"
									class="toggle toggle-sm toggle-success -mb-1 mr-2"
									if len(candidate.EventDescription) > 0 {
										checked
									}
								/><span class="label-text"><strong>Description:</strong> { candidate.EventDescription }</span>
							</label>
						</p>
					</div>
				</div>
			}
		</div>
	</form>
}

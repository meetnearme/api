package components

import (
	"fmt"
	"github.com/meetnearme/api/functions/gateway/services"
	"github.com/meetnearme/api/functions/gateway/templates/partials"
	"os"
)

templ LocationLookupPartial(hxMethod string, hxApiPath string, hxAfterReqStr string, inputModelStr string, buttonPreText, buttonPostText string, lat float64, lon float64, address string, cfLocationLat float64, cfLocationLon float64) {
	<form
		class="group"
		novalidate
		if hxMethod == "patch" && hxApiPath != "" {
			hx-patch={ hxApiPath }
		}
		if hxMethod == "post" && hxApiPath != "" {
			hx-post={ hxApiPath }
		}
		hx-ext="json-enc"
		hx-target="#location-confirmation"
		hx-disabled-elt="input[name='location'], button[type='submit']"
		@submit.prevent="formData.addressInput ? '' : ''"
		if hxAfterReqStr != "" {
			@htmx:after-request={ hxAfterReqStr }
		} else {
			@htmx:after-request="handleHtmxAfterReq(event)"
		}
		x-data="getLocationLookupState()"
		x-init={ `
			$watch('formData.lat', value => $dispatch('lat-updated', { value }));
			$watch('formData.lon', value => $dispatch('lon-updated', { value }));
			$watch('formData.address', value => $dispatch('address-updated', { value }));
		` }
	>
		<input
			if inputModelStr != "" {
				x-model={ inputModelStr }
			} else {
				x-model="formData.url"
			}
			name="url"
			id="url"
			type="hidden"
		/>
		<label for="location" class="form-control w-full">
			Venue Address
			<input
				name="location"
				x-model.debounce.500ms="formData.addressInput"
				type="text"
				class="input input-bordered w-full mt-3"
				placeholder="101 Somewhere St, Nowhereville 12345"
			/>
			<input type="hidden" name="variant" value="form-hidden"/>
		</label>
		<div id="location-confirmation" class="htmx-hide-in-flight margins-when-children my-4" aria-live="polite"></div>
		<template x-if="formData.addressInput">
			<div class="grid lg:grid-cols-7 items-center justify-items-center">
				<div class="lg:col-span-2">
					<div class="margins-when-children my-4" aria-live="polite">
						<button
							type="submit"
							:disabled="formData.addressInput?.length < 1"
							class="btn btn-primary rounded-full"
							:class="{'btn-outline': !formData.address || formData.address !== formData.addressInput}"
						>
							<template x-if="!formData.address || formData.address !== formData.addressInput">
								<span>{ buttonPreText } </span>
							</template>
							<template x-if="formData.address && formData.address === formData.addressInput">
								<span>{ buttonPostText } </span>
							</template>
							<span class="htmx-indicator loading loading-spinner loading-sm"></span>
							<template x-if="formData.address && formData.address === formData.addressInput">
								<svg
									xmlns="http://www.w3.org/2000/svg"
									class="stroke-current h-8 w-8"
									fill="none"
									viewBox="0 0 24 24"
								>
									<path
										stroke-linecap="round"
										stroke-linejoin="round"
										stroke-width="2"
										d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
									></path>
								</svg>
							</template>
						</button>
					</div>
				</div>
				<div class="lg:col-span-5 bg-base-300 my-4 p-4">
					<iframe
						id="google-map"
						class="max-w-full transition-all h-0 aspect-video"
						width="600"
						height="450"
						style="border:0"
						loading="lazy"
						allowfullscreen
						referrerpolicy="no-referrer-when-downgrade"
						:class="{'h-auto': formData.addressInput?.length }"
						:src="getAddress()"
					></iframe>
				</div>
			</div>
		</template>
		@partials.GeoLookup(lat, lon, address, "form-hidden")
	</form>
	<script id="location-lookup" data-google-api-key={ os.Getenv("GOOGLE_API_KEY") } data-event-address={ address } data-event-lat={ fmt.Sprintf("%.6f", lat) } data-event-lon={ fmt.Sprintf("%.6f", lon) } data-cf-lat={ fmt.Sprintf("%.6f", cfLocationLat) } data-cf-lon={ fmt.Sprintf("%.6f", cfLocationLon) } data-lat-lon-unknown={ fmt.Sprintf("%.6f", services.InitialEmptyLatLong) }>
		function getLocationLookupState() {
			return {
				cfLocationLat: document.querySelector('#location-lookup').getAttribute('data-cf-lat') ?? 0,
				cfLocationLon: document.querySelector('#location-lookup').getAttribute('data-cf-lon') ?? 0,
				latLonUnknownVal: document.querySelector('#location-lookup').getAttribute('data-lat-lon-unknown') ?? false,
				formData: {
					addressInput: document.querySelector('#location-lookup').getAttribute('data-event-address') ?? "",
					address: document.querySelector('#location-lookup').getAttribute('data-event-address') ?? "",
					url: "",
					lat: document.querySelector('#location-lookup').getAttribute('data-event-lat') ?? 0,
					lon: document.querySelector('#location-lookup').getAttribute('data-event-lon') ?? 0,
				},
				getAddress() {
					return `https://www.google.com/maps/embed/v1/place?key=${document.querySelector('#location-lookup').getAttribute('data-google-api-key')}${this.cfLocationLat !== this.latLonUnknownVal && this.cfLocationLon !== this.latLonUnknownVal ? `&center=${this.cfLocationLat},${this.cfLocationLon}` : ""}&q=${this.formData.addressInput}`
				},
				handleHtmxAfterReq(event) {
					if (event.detail.successful){
						this.formData.addressInput = document.querySelector('[data-value-address]').getAttribute('data-value-address')
						this.formData.address = document.querySelector('[data-value-address]').getAttribute('data-value-address')
						this.formData.lat = document.querySelector('[data-value-lat]').getAttribute('data-value-lat')
						this.formData.lon = document.querySelector('[data-value-lon]').getAttribute('data-value-lon')
					}
				}
			}
		}
	</script>
}

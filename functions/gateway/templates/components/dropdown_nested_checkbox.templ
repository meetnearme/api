package components

import (
	"fmt"
	constants "github.com/meetnearme/api/functions/gateway/constants"
	"github.com/meetnearme/api/functions/gateway/helpers"
)

templ DropdownNestedCheckbox() {
	<details class="dropdown">
		@NestedCheckboxList(true, []string{})
	</details>
}

templ NestedCheckboxList(isInDropdown bool, interests []string) {
	if isInDropdown {
		<summary class="m-1 btn">Categories</summary>
	}
	<div class="collapse-content p-0 bg-base-200 peer-checked:bg-base-200">
		<ul
			if isInDropdown {
				class="shadow dropdown-content z-[1] bg-base-100 rounded-box"
			} else {
				class="p-2 shadow bg-base-100 rounded-box"
			}
		>
			for idx, cat := range constants.Categories {
				<li>
					<div class="collapse bg-base-200">
						<input
							type="checkbox"
							class="peer"
						/>
						<div class="collapse-title">
							<div class="form-control flex-none">
								<label class="label cursor-pointer justify-between">
									<div class="flex">
										<input
											id={ cat.Name }
											name={ "itm-" + fmt.Sprint(idx) + "-category" }
											value={ cat.Name }
											type="checkbox"
											class="z-[9] checkbox checkbox-tertiary border-opacity-80 mr-5"
											if helpers.ArrFindFirst(interests, []string{cat.Name}) != "" {
												checked="checked"
											}
										/>
										<span class="label-text">{ cat.Name }</span>
									</div>
									<!-- plus icon -->
									<svg class="w-6 h-6 flex-none shrink-0 grow-0 fill-current" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6 13h-5v5h-2v-5h-5v-2h5v-5h2v5h5v2z"></path></svg>
									// <!-- minus icon -->
									// Do the clever icon swap from daisy UI later via .swap-on and .swap-off
									// <svg class="w-6 h-6 flex-none shrink-0 grow-0 swap-off fill-current" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm6 13h-12v-2h12v2z"></path></svg>
								</label>
							</div>
						</div>
						<div class="collapse-content bg-base-200 peer-checked:bg-base-200">
							<ul>
								for idx, item := range cat.Items {
									<li>
										<input
											name={ "itm-" + fmt.Sprint(idx) + "-subCategory" }
											value={ item.Name }
											type="checkbox"
											if helpers.ArrFindFirst(interests, []string{item.Name}) != "" {
												checked
											}
											class="z-[9] checkbox checkbox-xs checkbox-tertiary border-opacity-80 mr-5 my-1"
										/>
										<span class="label-text">{ item.Name }</span>
									</li>
								}
							</ul>
						</div>
					</div>
				</li>
			}
		</ul>
	</div>
}

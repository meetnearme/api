package pages

import (
	"fmt"

	"github.com/meetnearme/api/functions/gateway/services"
	"github.com/meetnearme/api/functions/gateway/helpers"
)

var cityStateArray = []string{
    "New York, New York, USA",
    "Los Angeles, California, USA",
    "Chicago, Illinois, USA",
    "Houston, Texas, USA",
    "Philadelphia, Pennsylvania, USA",
    "Phoenix, Arizona, USA",
    "San Antonio, Texas, USA",
    "San Diego, California, USA",
    "Dallas, Texas, USA",
    "San Jose, California, USA",
    "Austin, Texas, USA",
    "Indianapolis, Indiana, USA",
    "Jacksonville, Florida, USA",
    "San Francisco, California, USA",
    "Columbus, Ohio, USA",
    "Charlotte, North Carolina, USA",
    "Fort Worth, Texas, USA",
    "Detroit, Michigan, USA",
    "El Paso, Texas, USA",
    "Memphis, Tennessee, USA",
    "Seattle, Washington, USA",
    "Denver, Colorado, USA",
    "Washington, District of Columbia, USA",
    "Boston, Massachusetts, USA",
    "Nashville-Davidson, Tennessee, USA",
    "Baltimore, Maryland, USA",
    "Oklahoma City, Oklahoma, USA",
    "Louisville, Kentucky, USA",
    "Portland, Oregon, USA",
    "Las Vegas, Nevada, USA",
    "Milwaukee, Wisconsin, USA",
    "Albuquerque, New Mexico, USA",
    "Tucson, Arizona, USA",
    "Fresno, California, USA",
    "Sacramento, California, USA",
    "Long Beach, California, USA",
    "Kansas City, Missouri, USA",
    "Mesa, Arizona, USA",
    "Virginia Beach, Virginia, USA",
    "Atlanta, Georgia, USA",
    "Colorado Springs, Colorado, USA",
    "Omaha, Nebraska, USA",
    "Raleigh, North Carolina, USA",
    "Miami, Florida, USA",
    "Oakland, California, USA",
    "Minneapolis, Minnesota, USA",
    "Tulsa, Oklahoma, USA",
    "Cleveland, Ohio, USA",
    "Wichita, Kansas, USA",
    "Arlington, Texas, USA",
    "New Orleans, Louisiana, USA",
    "Bakersfield, California, USA",
    "Tampa, Florida, USA",
    "Honolulu, Hawaii, USA",
    "Aurora, Colorado, USA",
    "Anaheim, California, USA",
    "Santa Ana, California, USA",
    "St. Louis, Missouri, USA",
    "Riverside, California, USA",
    "Corpus Christi, Texas, USA",
    "Lexington-Fayette, Kentucky, USA",
    "Pittsburgh, Pennsylvania, USA",
    "Anchorage, Alaska, USA",
    "Stockton, California, USA",
    "Cincinnati, Ohio, USA",
    "St. Paul, Minnesota, USA",
    "Toledo, Ohio, USA",
    "Greensboro, North Carolina, USA",
    "Newark, New Jersey, USA",
    "Plano, Texas, USA",
    "Henderson, Nevada, USA",
    "Lincoln, Nebraska, USA",
    "Buffalo, New York, USA",
    "Jersey City, New Jersey, USA",
    "Chula Vista, California, USA",
    "Fort Wayne, Indiana, USA",
    "Orlando, Florida, USA",
    "St. Petersburg, Florida, USA",
    "Chandler, Arizona, USA",
    "Laredo, Texas, USA",
    "Norfolk, Virginia, USA",
    "Durham, North Carolina, USA",
    "Madison, Wisconsin, USA",
    "Lubbock, Texas, USA",
    "Irvine, California, USA",
    "Winston-Salem, North Carolina, USA",
    "Glendale, Arizona, USA",
    "Garland, Texas, USA",
    "Hialeah, Florida, USA",
    "Reno, Nevada, USA",
    "Chesapeake, Virginia, USA",
    "Gilbert, Arizona, USA",
    "Baton Rouge, Louisiana, USA",
    "Irving, Texas, USA",
    "Scottsdale, Arizona, USA",
    "North Las Vegas, Nevada, USA",
    "Fremont, California, USA",
    "Boise City, Idaho, USA",
    "Richmond, Virginia, USA",
    "San Bernardino, California, USA",
    "Birmingham, Alabama, USA",
    "Spokane, Washington, USA",
    "Rochester, New York, USA",
    "Des Moines, Iowa, USA",
    "Modesto, California, USA",
    "Fayetteville, North Carolina, USA",
    "Tacoma, Washington, USA",
    "Oxnard, California, USA",
    "Fontana, California, USA",
    "Columbus, Georgia, USA",
    "Montgomery, Alabama, USA",
    "Moreno Valley, California, USA",
    "Shreveport, Louisiana, USA",
    "Aurora, Illinois, USA",
    "Yonkers, New York, USA",
    "Akron, Ohio, USA",
    "Huntington Beach, California, USA",
    "Little Rock, Arkansas, USA",
    "Augusta-Richmond County, Georgia, USA",
    "Amarillo, Texas, USA",
    "Glendale, California, USA",
    "Mobile, Alabama, USA",
    "Grand Rapids, Michigan, USA",
    "Salt Lake City, Utah, USA",
    "Tallahassee, Florida, USA",
    "Huntsville, Alabama, USA",
    "Grand Prairie, Texas, USA",
    "Knoxville, Tennessee, USA",
    "Worcester, Massachusetts, USA",
    "Newport News, Virginia, USA",
    "Brownsville, Texas, USA",
    "Overland Park, Kansas, USA",
    "Santa Clarita, California, USA",
    "Providence, Rhode Island, USA",
    "Garden Grove, California, USA",
    "Chattanooga, Tennessee, USA",
    "Oceanside, California, USA",
    "Jackson, Mississippi, USA",
    "Fort Lauderdale, Florida, USA",
    "Santa Rosa, California, USA",
    "Rancho Cucamonga, California, USA",
    "Port St. Lucie, Florida, USA",
    "Tempe, Arizona, USA",
    "Ontario, California, USA",
    "Vancouver, Washington, USA",
    "Cape Coral, Florida, USA",
    "Sioux Falls, South Dakota, USA",
    "Springfield, Missouri, USA",
    "Peoria, Arizona, USA",
    "Pembroke Pines, Florida, USA",
    "Elk Grove, California, USA",
    "Salem, Oregon, USA",
    "Lancaster, California, USA",
    "Corona, California, USA",
    "Eugene, Oregon, USA",
    "Palmdale, California, USA",
    "Salinas, California, USA",
    "Springfield, Massachusetts, USA",
    "Pasadena, Texas, USA",
    "Fort Collins, Colorado, USA",
    "Hayward, California, USA",
    "Pomona, California, USA",
    "Cary, North Carolina, USA",
    "Rockford, Illinois, USA",
    "Alexandria, Virginia, USA",
    "Escondido, California, USA",
    "McKinney, Texas, USA",
    "Kansas City, Kansas, USA",
    "Joliet, Illinois, USA",
    "Sunnyvale, California, USA",
    "Torrance, California, USA",
    "Bridgeport, Connecticut, USA",
    "Lakewood, Colorado, USA",
    "Hollywood, Florida, USA",
    "Paterson, New Jersey, USA",
    "Naperville, Illinois, USA",
    "Syracuse, New York, USA",
    "Mesquite, Texas, USA",
    "Dayton, Ohio, USA",
    "Savannah, Georgia, USA",
    "Clarksville, Tennessee, USA",
    "Orange, California, USA",
    "Pasadena, California, USA",
    "Fullerton, California, USA",
    "Killeen, Texas, USA",
    "Frisco, Texas, USA",
    "Hampton, Virginia, USA",
    "McAllen, Texas, USA",
    "Warren, Michigan, USA",
    "Bellevue, Washington, USA",
    "West Valley City, Utah, USA",
    "Columbia, South Carolina, USA",
    "Olathe, Kansas, USA",
    "Sterling Heights, Michigan, USA",
    "New Haven, Connecticut, USA",
}

func GetCityRegionFromLocation(cfLocation helpers.CdnLocation) string {
	if cfLocation.City != "" && cfLocation.Region != "" {
		return cfLocation.City + ", " + cfLocation.Region
	}
	return "Location: Please Select"
}

func GetSelectedOptionAttr(cfLocation helpers.CdnLocation) string {
	return "selectedOption ? selectedOption.value : '" + GetCityRegionFromLocation(cfLocation) + "'"
}

templ HomePage(events []services.EventSelect, cfLocation helpers.CdnLocation) {
	<div class="header-hero">
		<h1 class="text-2xl md:text-5xl text-center mb-5">
			Push Your Boundaries.
			<br/>
			Explore Your World.
		</h1>
	</div>
	<div class="min-h-screen">
		<header class="flex justify-between p-4 bg-black border-b border-gray-700">
			<nav class="flex space-x-4">
				<button href="#" class="text-sm md:text-xl font-bold border-b-2 border-white">
					EVENTS
				</button>
				<button href="#" class="text-sm md:text-xl">
					GROUPS
				</button>
				<button href="#" class="text-sm md:text-xl">
					ORGANIZERS
				</button>
			</nav>
			//
			<button onclick="document.getElementById('flyout-tab-filters').click(); document.getElementById('main-drawer').click();" style="display: inline-block;" class="btn btn-ghost">
				FILTER <svg class="svg-icon" style="width: 1em; height: 1em;vertical-align: middle;fill: currentColor;overflow: hidden; display: inline-block;" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg"><path d="M640 288a64 64 0 1 1 0.032-128.032A64 64 0 0 1 640 288z m123.456-96c-14.304-55.04-64-96-123.456-96s-109.152 40.96-123.456 96H128v64h388.544c14.304 55.04 64 96 123.456 96s109.152-40.96 123.456-96H896V192h-132.544zM640 864a64 64 0 1 1 0.032-128.032A64 64 0 0 1 640 864m0-192c-59.456 0-109.152 40.96-123.456 96H128v64h388.544c14.304 55.04 64 96 123.456 96s109.152-40.96 123.456-96H896v-64h-132.544c-14.304-55.04-64-96-123.456-96M384 576a64 64 0 1 1 0.032-128.032A64 64 0 0 1 384 576m0-192c-59.456 0-109.152 40.96-123.456 96H128v64h132.544c14.304 55.04 64 96 123.456 96s109.152-40.96 123.456-96H896v-64H507.456c-14.304-55.04-64-96-123.456-96" fill="#FFFFFF"></path></svg>
			</button>
		</header>

		<script id="alpine-state" data-maps-default-list={ templ.JSONString(cityStateArray) }>
			function getLocationSearchData() {
				return {
					allOptions: JSON.parse(
						document.querySelector('#alpine-state').getAttribute('data-maps-default-list')
						).map((cityState) => ({
							label: cityState,
							value: cityState,
						})),
					options: [],
					isOpen: false,
					openedWithKeyboard: false,
					selectedOption: null,
					setSelectedOption(option) {
							this.selectedOption = option
							this.isOpen = false
							this.openedWithKeyboard = false
							this.$refs.hiddenTextField.value = option.value
					},
					getFilteredOptions(query) {
							this.options = this.allOptions.filter((option) =>
									option.label.toLowerCase().includes(query.toLowerCase()),
							)
							if (this.options.length === 0) {
									this.$refs.noResultsMessage.classList.remove('hidden')
							} else {
									this.$refs.noResultsMessage.classList.add('hidden')
							}
					},
					handleKeydownOnOptions(event) {
							// if the user presses backspace or the alpha-numeric keys, focus on the search field
							if ((event.keyCode >= 65 && event.keyCode <= 90) || (event.keyCode >= 48 && event.keyCode <= 57) || event.keyCode === 8) {
									this.$refs.searchField.focus()
							}
					},
				}
			}
		</script>

		// TODO: delete debugging statement
		<div>{ fmt.Sprint(cfLocation) }</div>

		<div x-data="getLocationSearchData()" class="flex w-full max-w-xs flex-col gap-1" x-on:keydown="handleKeydownOnOptions($event)" x-on:keydown.esc.window="isOpen = false, openedWithKeyboard = false" x-init="options = allOptions">
    <div class="relative px-4">
        <!-- trigger button  -->
        <button type="button" class="inline-flex w-full items-center justify-between gap-2 border border-slate-300 rounded-md bg-slate-100 mt-2 px-4 py-2 text-sm font-medium tracking-wide text-slate-700 transition hover:opacity-75 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-700 dark:border-slate-700 dark:bg-slate-800/50 dark:text-slate-300 dark:focus-visible:outline-blue-600" role="combobox" aria-controls="makesList" aria-haspopup="listbox" x-on:click="isOpen = ! isOpen" x-on:keydown.down.prevent="openedWithKeyboard = true" x-on:keydown.enter.prevent="openedWithKeyboard = true" x-on:keydown.space.prevent="openedWithKeyboard = true" x-bind:aria-expanded="isOpen || openedWithKeyboard" x-bind:aria-label={ GetSelectedOptionAttr(cfLocation) }>
            <span class="text-sm font-normal"
						x-text={ GetSelectedOptionAttr(cfLocation) }></span>
						<span class="sr-only"
						x-text="selectedOption ? selectedOption.value : 'Location: Please Select'"></span>
            <!-- Chevron  -->
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor"class="size-5" aria-hidden="true">
                <path fill-rule="evenodd" d="M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd"/>
            </svg>
        </button>

        <!-- Hidden Input To Grab The Selected Value  -->
        <input id="make" name="make" x-ref="hiddenTextField" hidden=""/>
        <div
					x-show="isOpen || openedWithKeyboard"
					:class="{'opacity-100': isOpen || openedWithKeyboard}"
					class="w-full opacity-0 transition-all absolute left-4 top-12 z-10 overflow-hidden rounded-md border border-slate-300 bg-slate-100"
					id="makesList"
					role="listbox"
					aria-label="locations list"
					x-on:click.outside="isOpen = false, openedWithKeyboard = false"
					x-on:keydown.down.prevent="$focus.wrap().next()"
					x-on:keydown.up.prevent="$focus.wrap().previous()"
					x-transition x-trap="openedWithKeyboard">

            <!-- Search  -->
            <div class="relative">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke="currentColor" fill="none" stroke-width="1.5" class="absolute left-4 top-1/2 size-5 -translate-y-1/2 text-slate-700/50 dark:text-slate-300/50" aria-hidden="true" >
                    <path stroke-linecap="round" stroke-linejoin="round" d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"/>
                </svg>
                <input type="text" class="w-full border-b borderslate-300 bg-slate-100 py-2.5 pl-11 pr-4 text-sm text-slate-700 focus:outline-none focus-visible:border-blue-700 disabled:cursor-not-allowed disabled:opacity-75 dark:border-slate-700 dark:bg-slate-800 dark:text-slate-300 dark:focus-visible:border-blue-600" name="searchField" aria-label="Search" x-on:input="getFilteredOptions($el.value)" x-ref="searchField" placeholder="Search" />
            </div>

            <!-- Options  -->
            <ul class="flex max-h-44 flex-col overflow-y-auto">
                <li class="hidden px-4 py-2 text-sm text-slate-700 dark:text-slate-300" x-ref="noResultsMessage">
                    <span>No matches found</span>
                </li>
                <template x-for="(item, index) in options" x-bind:key="item.value">
                    <li class="combobox-option inline-flex cursor-pointer justify-between gap-6 bg-slate-100 px-4 py-2 text-sm text-slate-700 hover:bg-slate-800/5 hover:text-black focus-visible:bg-slate-800/5 focus-visible:text-black focus-visible:outline-none dark:bg-slate-800 dark:text-slate-300 dark:hover:bg-slate-100/5 dark:hover:text-white dark:focus-visible:bg-slate-100/10 dark:focus-visible:text-white" role="option" x-on:click="setSelectedOption(item)" x-on:keydown.enter="setSelectedOption(item)" x-bind:id="'option-' + index" tabindex="0">
                        <!-- Label  -->
                        <span x-bind:class="selectedOption == item ? 'font-bold' : null" x-text="item.label"></span>
                        <!-- Screen reader 'selected' indicator  -->
                        <span class="sr-only" x-text="selectedOption == item ? 'selected' : null"></span>
                        <!-- Checkmark  -->
                        <svg x-cloak x-show="selectedOption == item" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" stroke="currentColor" fill="none" stroke-width="2" class="size-4" aria-hidden="true">
                            <path stroke-linecap="round" stroke-linejoin="round" d="m4.5 12.75 6 6 9-13.5" />
                        </svg>
                    </li>
                </template>
            </ul>
        </div>
    </div>
</div>


		<div class="flex p-4 bg-black">
			<div class="flex flex-auto space-x-2">
				<button class="grow px-4 py-2 text-md md:text-xl btn btn-primary">TODAY</button>
				<button class="grow px-4 py-2 text-md md:text-xl btn hover:text-black hover:bg-gray-500 text-black bg-gray-200">TOMORROW</button>
				<button class="grow px-4 py-2 text-md md:text-xl btn hover:text-black hover:bg-gray-500 text-black bg-gray-200">THIS WEEK</button>
				<button class="grow px-4 py-2 text-md md:text-xl btn hover:text-black hover:bg-gray-500 text-black bg-gray-200">CUSTOM</button>
			</div>
		</div>
		if (len(events) < 1) {
			<p class="text-md md:text-lg text-center mt-5">
				No events found, try enabling geolocation or changing your location, date, or time
			</p>
		} else {
			<main class="p-4 space-y-4 md:grid md:grid-cols-1 md:gap-4 md:space-y-0">
				for _, ev := range events {
					<div class="md:flex md:flex-row overflow-hidden relative">
						<a class="flex w-full md:w-1/2 h-96 md:h-72" href={ templ.URL("/events/" + ev.Id) }>
							<img
								src={ templ.EscapeString(helpers.GetImgUrlFromHash(ev.Id)) }
								alt=""
								class="object-cover w-full"
								width="400"
								height="200"
								style="opacity: 0.3; aspect-ratio: 400 / 200; object-fit: cover;"
							/>
						</a>
						<div class="flex flex-col justify-between w-full md:w-1/2 p-4 bg-gradient-to-t from-black/70 from-80% to-transparent absolute bottom-0 left-0 md:relative">
							<div class="mb-2">
								<h2 class="text-xl">{ ev.Name }</h2>
								<p class="text-sm">{ ev.Address } | { helpers.FormatDate(ev.Datetime) } | { helpers.FormatTime(ev.Datetime) }</p>
							</div>
							<a href={ templ.URL("/events/" + ev.Id) } class="btn btn-primary btn-block">
								LEARN MORE
								&rarr;
							</a>
						</div>
					</div>
				}
			</main>
		}
	</div>
}

package pages

import (
	"fmt"
	"github.com/meetnearme/api/functions/gateway/helpers"
	"github.com/meetnearme/api/functions/gateway/templates/partials"
	"github.com/meetnearme/api/functions/gateway/types"
	"net/url"
	"os"
	"strings"
)

templ IconLeftSection(labelText, labelValue, icon, url string, venueSection bool, event types.Event) {
	<div class="flex">
		<div class="flex-none">
			// Left column content (fit to width)
			<div class="icon-container w-6 mr-2">
				<img class="fill-current" alt={ icon + "icon " } src={ templ.EscapeString(os.Getenv("STATIC_BASE_URL") + "/assets/" + icon + ".svg") }/>
			</div>
		</div>
		<div class="flex-grow">
			<p>
				if url != "" {
					<strong>{ labelText }:</strong> <a class="link link-primary" href={ templ.URL(url) }>{ labelValue }</a>
				} else {
					<strong>{ labelText }:</strong> { labelValue }
				}
				// This is a hack because it wasn't clear how to get nested templ components working
				if venueSection {
					<p>
						<a class="link link-primary" href={ templ.URL(fmt.Sprintf("https://www.google.com/maps/search/?api=1&query=%f,%f", event.Lat, event.Long)) }>
							{ "(Map Link)" }
						</a>
					</p>
				}
			</p>
		</div>
	</div>
}

templ EventDetailsPage(event types.Event, userInfo helpers.UserInfo, checkoutParamVal string, canEdit bool) {
	<div class="max-w-prose mx-auto" x-data="getEventDetailsData()">
		if event.Id == "" {
			<br/>
			<br/>
			<br/>
			<br/>
			<br/>
			<h2 class="text-3xl mt-2 text-center">404 - Can't Find That Event</h2>
			<br/>
			<br/>
			<br/>
			<br/>
			<br/>
			<br/>
			<br/>
			<br/>
			<br/>
		} else {
			if (canEdit) {
				<div class="alert alert-success">
					You are an editor for this event. <a class="btn btn-sm" href={ templ.URL(strings.Replace(strings.Replace(helpers.SitePages["edit-event"].Slug, "{"+helpers.EVENT_ID_KEY+"}", event.Id, 1), "{trailingslash:\\/?}", "", 1)) }>Edit Event</a>
				</div>
			}
			<h2 class="text-3xl mt-2">{ event.Name }</h2>
			if event.EventSourceType == helpers.ES_SERIES_PARENT {
				<h3 class="text-xl mt-2">Event Series</h3>
				<div
					hx-get={ "/api/html/events?list_mode=DATES_ONLY&end_time=2099-10-18T10:00:00Z&radius=20000&event_source_ids=" + event.Id }
					hx-trigger="load"
					hx-swap="outerHTML"
				>
					<div class="mt-2"><span class="loading loading-spinner loading-md text-primary"></span></div>
				</div>
			}
			<br/>
			<p>
				if checkoutParamVal == "success" {
					@partials.SuccessBannerHTML("Thanks for your support, we hope to see you at the event!")
					<br/>
					<br/>
				}
				if checkoutParamVal == "registered" {
					@partials.SuccessBannerHTML("Thanks for your interest, can't wait to see you at the event!")
					<br/>
					<br/>
				}
				@IconLeftSection("Host", event.EventOwnerName, "community", `/?owners=`+event.EventOwners[0], false, event)
				<br/>
				@IconLeftSection("Venue", event.Address, "location", "/?address="+event.Address, true, event)
				<br/>
				if event.EventSourceType != "SLF_EVS" {
					if helpers.GetDateOrShowNone(event.StartTime, event.Timezone) != "" {
						@IconLeftSection("Date", helpers.GetDateOrShowNone(event.StartTime, event.Timezone), "calendar", "", false, event)
					}
					<br/>
					if helpers.GetTimeOrShowNone(event.StartTime, event.Timezone) != "" {
						@IconLeftSection("Time", helpers.GetTimeOrShowNone(event.StartTime, event.Timezone), "clock", "", false, event)
					}
					<br/>
				}
				if event.StartingPrice > 0 {
					// TODO: handle basecurrency
					@IconLeftSection("Price", "$"+fmt.Sprint(event.StartingPrice/100), "price", "", false, event)
				}
				<br/>
				<h3 class="text-xl">EVENT DESCRIPTION</h3>
				<br/>
				<div class="whitespace-pre-wrap">{ event.Description }</div>
			</p>
			<div class="bottom-drawer">
				<div class="container mx-auto">
					if event.StartingPrice > 0 {
						<button data-umami-event={ "buy-tkts-clk" } data-umami-event-event-id={ event.Id } @click="handleCtaClick('cart')" class="btn btn-block btn-primary">BUY TICKETS</button>
					} else if event.HasRegistrationFields && event.StartingPrice == 0 {
						<button data-umami-event={ "reg-tkts-clk" } data-umami-event-event-id={ event.Id } @click="handleCtaClick('cart')" class="btn btn-block btn-primary">REGISTER NOW</button>
					} else {
						<a
							data-umami-event={ "rsvp-click" }
							data-umami-event-event-id={ event.Id }
							target="_blank"
							href={ templ.URL(fmt.Sprintf("https://calendar.google.com/calendar/render?action=TEMPLATE&dates=%s/%s&ctz=%s&details=%s&location=%s&text=%s",
						helpers.FormatTimeForGoogleCalendar(event.StartTime, event.Timezone),
						helpers.FormatTimeForGoogleCalendar(event.StartTime + (60*60), event.Timezone),
						event.Timezone.String(),
						url.QueryEscape(event.Description),
						url.QueryEscape(event.Address),
						url.QueryEscape(event.Name))) }
							@click="handleCtaClick('rsvp')"
							class="btn btn-block btn-primary"
						>
							if userInfo.Sub == "" {
								ADD TO CALENDAR
							} else {
								RSVP
							}
						</a>
					}
					if userInfo.Sub != "" {
						<br/>
						<br/>
						<button
							data-umami-event={ "intrst-click" }
							data-umami-event-event-id={ event.Id }
							@click="document.getElementById('icmi-modal').showModal(); handleCtaClick('icmi')"
							class="btn btn-block btn-primary btn-outline btn-bold-outline text-neutral-content"
						>Interested, can't make it!</button>
						<dialog id="icmi-modal" class="modal modal-bottom sm:modal-middle bg-base-200 bg-opacity-90">
							<div class="modal-box">
								<h3 class="text-lg font-bold">YAY!</h3>
								<p class="py-4">We've noted your interest, sorry to miss you... but next time!</p>
								<form method="dialog" class="modal-backdrop">
									<!-- if there is a button in form, it will close the modal -->
									<button class="btn btn-primary">Close</button>
								</form>
							</div>
						</dialog>
					}
				</div>
			</div>
		}
	</div>
	<img class="main-bg top" alt="event featured image" src={ templ.EscapeString(helpers.GetImgUrlFromHash(event)) }/>
	<script id="event-details-script" data-interested-status={ helpers.PurchaseStatus.Interested } data-registered-status={ helpers.PurchaseStatus.Registered }>
		function getEventDetailsData() {
			return {
				userId: document.querySelector('#registration-purchasables')?.getAttribute?.('data-user-id'),
				eventId: document.querySelector('#registration-purchasables')?.getAttribute?.('data-event-id'),
        eventName: document.querySelector('#registration-purchasables').getAttribute('data-event-name'),
				interestedStatus: document.querySelector('#event-details-script')?.getAttribute?.('data-interested-status'),
				registeredStatus: document.querySelector('#event-details-script')?.getAttribute?.('data-registered-status'),
				init() {},
				formData: {},
				handleCtaClick(tab) {
					if (tab === 'rsvp' || tab === 'icmi' && this.userId) {
						// TODO: refactor `body` payloadfor `purchases` endpoint
						const body = {
              status: tab === 'rsvp' ? this.registeredStatus : this.interestedStatus,
              event_name: this.eventName,
              purchased_items: [],
              total: 0,
            }
						const headers = {
							type: 'application/json',
						};
						const blob = new Blob([JSON.stringify(body)], headers);

						// TODO: is this correct?
						navigator.sendBeacon(`/api/checkout/${this.eventId}`, blob);
						return
					}
					if (tab === 'cart') {
						// select the subnav item
						document.getElementById(`flyout-tab-${tab}`).click();
						// toggle the main drawer
						document.getElementById(`main-drawer`).click();
					}

				}
			}
		}
	</script>
}

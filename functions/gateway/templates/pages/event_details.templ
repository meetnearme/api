package pages

import (
	"fmt"
	"github.com/meetnearme/api/functions/gateway/helpers"
	"github.com/meetnearme/api/functions/gateway/services"
	"log"
	"os"
)

func getMapUrl(event services.EventSelect) string {
	log.Println("getMapUrl event.Latitude: ", event.Latitude)
	log.Println("getMapUrl event.Longitude: ", event.Longitude)
	return "https://www.google.com/maps/embed/v1/place?key=" + os.Getenv("GOOGLE_API_KEY") + "&q=" + fmt.Sprintf("%f,%f", event.Latitude, event.Longitude)
}

templ EventDetailsPage(event services.EventSelect) {
	<div class="max-w-prose mx-auto">
		<h2 class="text-3xl mt-2">{ event.Name }</h2>
		<h3>ZorderIndex arr: { fmt.Sprint(event.ZOrderIndex) }</h3>
		<h3>ZorderIndex str: { fmt.Sprintf("%x", event.ZOrderIndex) }</h3>
		<br/>
		<p>
			<img style="display: inline-block;" alt="Location Icon" src={ templ.EscapeString(os.Getenv("STATIC_BASE_URL") + "/assets/location.svg") }/> <strong>Location:</strong> { event.Address }
			<br/>
			<br/>
			<img style="display: inline-block;" alt="Calendar Icon" src={ templ.EscapeString(os.Getenv("STATIC_BASE_URL") + "/assets/calendar.svg") }/> <strong>Date:</strong> { helpers.FormatDate(event.Datetime) }
			<br/>
			<br/>
			<img style="display: inline-block;" alt="Clock Icon" src={ templ.EscapeString(os.Getenv("STATIC_BASE_URL") + "/assets/clock.svg") }/><strong>Time:</strong> { helpers.FormatTime(event.Datetime) }
			<br/>
			<br/>
			<strong>Price:</strong> $10.00
			<br/>
			<br/>
			// TODO: remove this, just for testing
			<iframe src={ getMapUrl(event) } width="100%" height="300px" style="border:0;" allowfullscreen="" loading="lazy"></iframe>
			<br/>
			<br/>
			<h3 class="text-xl">EVENT DESCRIPTION</h3>
			<br/>
			<br/>
			{ event.Description }
		</p>
		<div class="bottom-drawer">
			<button class="btn btn-block btn-primary">RSVP</button>
			<br/>
			<br/>
			<button class="btn btn-block btn-primary btn-outline text-neutral-content">Interested, can't make it!</button>
		</div>
	</div>
	<img class="main-bg top" alt="event featured image" src={ templ.EscapeString(helpers.GetImgUrlFromHash(event.Id)) }/>
}

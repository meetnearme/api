package pages

import "github.com/meetnearme/api/functions/gateway/helpers"

templ AddOrEditEventPage(pageObj helpers.SitePage) {
	<header class="page-header bg-base-100 shadow-md sticky sticky-under-top-nav z-40 py-4">
		<h1 class="text-3xl mb-4">{ pageObj.Name }</h1>
	</header>
	<h2 class="card-title sticky sticky-under-top-nav subheader bg-base-100 z-40 py-2">Basic Information</h2>
	<div id="basic" class="card border-2 border-base-300 bg-base-200 p-10 rounded-box">
		<div class="card">
			<label class="form-control w-full max-w-xs">
				<div class="label">Event Name</div>
				<input class="input input-bordered w-full" id="name" type="text" placeholder="Enter event name"/>
			</label>
			<div class="form-control">
				<label class="label" for="description">Description</label>
				<textarea class="textarea textarea-bordered w-full" id="description" placeholder="Enter event description"></textarea>
			</div>
			<div class="form-control">
				<label class="label">Tags</label>
				<div class="tags" id="tagsList"></div>
				<input class="input input-bordered" type="text" id="tagInput" placeholder="Add tags (press Enter)"/>
			</div>
		</div>
		<div class="card">
			<h2 class="card-title">Event Ownership</h2>
			<div class="form-control">
				<div class="form-control">
					<label class="label">Event Owners</label>
					<div class="tags" id="ownersList"></div>
					<input class="input input-bordered" type="text" id="ownersInput" placeholder="Add owners (press Enter)"/>
				</div>
			</div>
			<div class="form-control">
				<label class="label" for="eventOwnerName">Owner Display Name</label>
				<input class="input input-bordered" id="eventOwnerName" type="text" placeholder="Enter owner display name"/>
			</div>
		</div>
	</div>
	<h2 class="card-title sticky sticky-under-top-nav subheader bg-base-100 z-40 py-2">Event Details</h2>
	<div id="details" class="card border-2 border-base-300 bg-base-200 p-10 rounded-box">
		<div class="card">
			<div class="grid grid-2">
				<div class="form-control">
					<label class="label">Start Date & Time</label>
					<input class="input input-bordered" type="datetime-local"/>
				</div>
				<div class="form-control">
					<label class="label">End Date & Time</label>
					<input class="input input-bordered" type="datetime-local"/>
				</div>
			</div>
			<div class="form-control">
				<label class="label">Timezone</label>
				<select class="select select-bordered">
					<option value="">Select timezone</option>
					<option value="et">Eastern Time</option>
					<option value="ct">Central Time</option>
					<option value="mt">Mountain Time</option>
					<option value="pt">Pacific Time</option>
				</select>
			</div>
			<div class="form-control">
				<label class="label">Image URL</label>
				<input class="input input-bordered" type="text" placeholder="Enter image URL"/>
			</div>
		</div>
	</div>
	<h2 class="card-title sticky sticky-under-top-nav subheader bg-base-100 z-40 py-2">Location Details</h2>
	<div id="location" class="card border-2 border-base-300 bg-base-200 p-10 rounded-box">
		<div class="card">
			<h2 class="card-title">Location Details</h2>
			<div class="form-control">
				<label class="label">Address</label>
				<textarea class="textarea textarea-bordered" placeholder="Enter full address"></textarea>
			</div>
			<div class="grid grid-2">
				<div class="form-control">
					<label class="label">Latitude</label>
					<input class="input input-bordered" type="number" step="any" placeholder="Enter latitude"/>
				</div>
				<div class="form-control">
					<label class="label">Longitude</label>
					<input class="input input-bordered" type="number" step="any" placeholder="Enter longitude"/>
				</div>
			</div>
		</div>
	</div>
	<h2 class="card-title sticky sticky-under-top-nav subheader bg-base-100 z-40 py-2">Pricing & Registration</h2>
	<div id="pricing" class="card border-2 border-base-300 bg-base-200 p-10 rounded-box">
		<div class="card">
			<h2 class="card-title">Pricing & Registration</h2>
			<div class="form-control w-52">
				<label class="label cursor-pointer">
					<span class="label-text">Enable Event Registration</span>
					<input name="hasRegistrationFields" type="checkbox" class="toggle toggle-primary"/>
				</label>
			</div>
			<div class="form-control w-52">
				<label class="label cursor-pointer">
					<span class="label-text">Enable Purchasable Items</span>
					<input name="hasPurchasable" type="checkbox" class="toggle toggle-primary"/>
				</label>
			</div>
			<div :class="hasPurchasable ? 'grid grid-2' : 'hidden'">
				<div class="form-control">
					<label class="label">Starting Price</label>
					<input class="input" type="number" step="0.01" placeholder="Enter starting price"/>
				</div>
				<div class="form-control">
					<label class="label">Currency</label>
					<select class="select">
						<option value="">Select currency</option>
						<option value="usd">USD</option>
						<option value="eur">EUR</option>
						<option value="gbp">GBP</option>
					</select>
				</div>
			</div>
		</div>
	</div>
	<div class="sticky bottom-0 flex justify-end border-2 border-base-300 bg-base-200 py-4 z-50">
		<button class="btn btn-outline">Cancel</button>
		<button class="btn btn-primary mx-4">Publish</button>
		<dialog id="icmi-modal" class="modal modal-bottom sm:modal-middle bg-base-200 bg-opacity-90">
			<div class="modal-box">
				<h3 class="text-lg font-bold">YAY!</h3>
				<p class="py-4">We've noted your interest, sorry to miss you... but next time!</p>
				<form method="dialog" class="modal-backdrop">
					<!-- if there is a button in form, it will close the modal -->
					<button class="btn btn-primary">Close</button>
				</form>
			</div>
		</dialog>
	</div>
	// 	<div class="bottom-drawer">
	// 		<div class="container mx-auto">
	// 			<button class="btn btn-block btn-primary">Cancel</button>
	// 			<br/>
	// 			<br/>
	// 			<button class="btn btn-block btn-primary btn-outline btn-bold-outline text-neutral-content">Save Changes</button>
	// 			<dialog id="icmi-modal" class="modal modal-bottom sm:modal-middle bg-base-200 bg-opacity-90">
	// 				<div class="modal-box">
	// 					<h3 class="text-lg font-bold">YAY!</h3>
	// 					<p class="py-4">We've noted your interest, sorry to miss you... but next time!</p>
	// 					<form method="dialog" class="modal-backdrop">
	// 						<!-- if there is a button in form, it will close the modal -->
	// 						<button class="btn btn-primary">Close</button>
	// 					</form>
	// 				</div>
	// 			</dialog>
	// 		</div>
	// 	</div>
	// </div>
	<script>
        // Tag management
        const tagInput = document.getElementById('tagInput');
        const tagsList = document.getElementById('tagsList');
        const ownersInput = document.getElementById('ownersInput');
        const ownersList = document.getElementById('ownersList');
        let tags = [];
        let owners =[];

        tagInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' && tagInput.value.trim() !== '') {
                const tag = tagInput.value.trim();
                tags.push(tag);
                renderTags();
                tagInput.value = '';
            }
        });

        function renderTags() {
            tagsList.innerHTML = tags.map(tag =>
                `<span class="tag badge badge-neutral mr-2 mb-4" onclick="removeTag('${tag}')">${tag} x</span>`
            ).join('');
        }

        function removeTag(tagToRemove) {
            tags = tags.filter(tag => tag !== tagToRemove);
            renderTags();
        }

        ownersInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' && ownersInput.value.trim() !== '') {
                const owner = ownersInput.value.trim();
                owners.push(owner);
                renderOwners();
                ownersInput.value = '';
            }
        });

        function renderOwners() {
            ownersList.innerHTML = owners.map(owner =>
                `<span class="tag badge badge-neutral mr-2 mb-4" onclick="removeOwner('${owner}')">${owner} x</span>`
            ).join('');
        }

        function removeOwner(ownerToRemove) {
            owners = owners.filter(owner => owner !== ownerToRemove);
            renderOwners();
        }
    </script>
}

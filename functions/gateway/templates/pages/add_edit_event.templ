package pages

import "github.com/meetnearme/api/functions/gateway/helpers"

templ AddOrEditEventPage(pageObj helpers.SitePage) {
	<style>
        :root {
            --background: #000000;
            --foreground: #ffffff;
            --card: #18181b;
            --card-border: #27272a;
            --input: #27272a;
            --input-border: #3f3f46;
            --primary: #22c55e;
            --primary-hover: #16a34a;
            --muted: #71717a;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: system-ui, -apple-system, sans-serif;
            background-color: var(--background);
            color: var(--foreground);
            line-height: 1.5;
            padding: 1.5rem;
        }

        .container {
            max-width: 64rem;
            margin: 0 auto;
        }

        .header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
        }

        .title {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .button {
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
            font-weight: 500;
            cursor: pointer;
            border: 1px solid transparent;
        }

        .button-outline {
            background: transparent;
            border-color: var(--input-border);
            color: var(--foreground);
        }

        .button-primary {
            background-color: var(--primary);
            color: var(--foreground);
        }

        .button-primary:hover {
            background-color: var(--primary-hover);
        }

        .tabs {
            margin-bottom: 1.5rem;
        }

        .tab-list {
            display: flex;
            gap: 0.5rem;
            background-color: var(--card);
            padding: 0.25rem;
            border-radius: 0.375rem;
            margin-bottom: 1rem;
        }

        .tab-trigger {
            padding: 0.5rem 1rem;
            background: transparent;
            border: none;
            color: var(--foreground);
            cursor: pointer;
            border-radius: 0.25rem;
        }

        .tab-trigger[aria-selected="true"] {
            background-color: var(--input);
        }

        .tab-content {
            display: none;
        }

        .tab-content[aria-hidden="false"] {
            display: block;
        }

        .card {
            background-color: var(--card);
            border: 1px solid var(--card-border);
            border-radius: 0.5rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .card-title {
            font-size: 1.25rem;
            font-weight: bold;
            margin-bottom: 1rem;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .input,
        .textarea,
        .select {
            width: 100%;
            padding: 0.5rem;
            background-color: var(--input);
            border: 1px solid var(--input-border);
            border-radius: 0.375rem;
            color: var(--foreground);
        }

        .textarea {
            min-height: 150px;
            resize: vertical;
        }

        .grid {
            display: grid;
            gap: 1rem;
        }

        .grid-2 {
            grid-template-columns: repeat(2, 1fr);
        }

        .tags {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-bottom: 0.5rem;
        }

        .tag {
            background-color: var(--input);
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            font-size: 0.875rem;
            cursor: pointer;
        }

        .switch {
            position: relative;
            display: inline-block;
            width: 44px;
            height: 24px;
        }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: var(--input);
            transition: .4s;
            border-radius: 24px;
        }

        .slider:before {
            position: absolute;
            content: "";
            height: 20px;
            width: 20px;
            left: 2px;
            bottom: 2px;
            background-color: var(--foreground);
            transition: .4s;
            border-radius: 50%;
        }

        input:checked + .slider {
            background-color: var(--primary);
        }

        input:checked + .slider:before {
            transform: translateX(20px);
        }

        .system-info {
            color: var(--muted);
            font-size: 0.875rem;
        }
    </style>
	<div class="container relative">
		<header class="header flex justify-between items-center bg-base-100 bg-opacity-75 shadow-md sticky top-24 z-40 p-4">
			<h1 class="text-3xl">{ pageObj.Name }</h1>
			<div>
				<button class="button button-outline">Cancel</button>
				<button class="button button-primary">Save Changes</button>
			</div>
		</header>
		<div class="tabs">
			<div class="tab-list" role="tablist">
				<button class="tab-trigger" role="tab" aria-selected="true" aria-controls="basic">Basic Info</button>
				<button class="tab-trigger" role="tab" aria-selected="false" aria-controls="details">Details</button>
				<button class="tab-trigger" role="tab" aria-selected="false" aria-controls="location">Location</button>
				<button class="tab-trigger" role="tab" aria-selected="false" aria-controls="pricing">Pricing</button>
			</div>
			<div id="basic" class="tab-content" role="tabpanel" aria-hidden="false">
				<div class="card">
					<h2 class="card-title">Basic Information</h2>
					<div class="form-group">
						<label class="label" for="name">Event Name</label>
						<input class="input" id="name" type="text" placeholder="Enter event name"/>
					</div>
					<div class="form-group">
						<label class="label" for="description">Description</label>
						<textarea class="textarea" id="description" placeholder="Enter event description"></textarea>
					</div>
					<div class="form-group">
						<label class="label">Tags</label>
						<div class="tags" id="tagsList"></div>
						<input class="input" type="text" id="tagInput" placeholder="Add tags (press Enter)"/>
					</div>
				</div>
				<div class="card">
					<h2 class="card-title">Event Ownership</h2>
					<div class="form-group">
						<div class="form-group">
							<label class="label">Event Owners</label>
							<div class="tags" id="ownersList"></div>
							<input class="input" type="text" id="ownersInput" placeholder="Add owners (press Enter)"/>
						</div>
					</div>
					<div class="form-group">
						<label class="label" for="eventOwnerName">Owner Display Name</label>
						<input class="input" id="eventOwnerName" type="text" placeholder="Enter owner display name"/>
					</div>
				</div>
			</div>
			<div id="details" class="tab-content" role="tabpanel" aria-hidden="true">
				<div class="card">
					<h2 class="card-title">Event Details</h2>
					<div class="grid grid-2">
						<div class="form-group">
							<label class="label">Start Date & Time</label>
							<input class="input" type="datetime-local"/>
						</div>
						<div class="form-group">
							<label class="label">End Date & Time</label>
							<input class="input" type="datetime-local"/>
						</div>
					</div>
					<div class="form-group">
						<label class="label">Timezone</label>
						<select class="select">
							<option value="">Select timezone</option>
							<option value="et">Eastern Time</option>
							<option value="ct">Central Time</option>
							<option value="mt">Mountain Time</option>
							<option value="pt">Pacific Time</option>
						</select>
					</div>
					<div class="form-group">
						<label class="label">Image URL</label>
						<input class="input" type="text" placeholder="Enter image URL"/>
					</div>
				</div>
			</div>
			<div id="location" class="tab-content" role="tabpanel" aria-hidden="true">
				<div class="card">
					<h2 class="card-title">Location Details</h2>
					<div class="form-group">
						<label class="label">Address</label>
						<textarea class="textarea" placeholder="Enter full address"></textarea>
					</div>
					<div class="grid grid-2">
						<div class="form-group">
							<label class="label">Latitude</label>
							<input class="input" type="number" step="any" placeholder="Enter latitude"/>
						</div>
						<div class="form-group">
							<label class="label">Longitude</label>
							<input class="input" type="number" step="any" placeholder="Enter longitude"/>
						</div>
					</div>
				</div>
			</div>
			<div id="pricing" class="tab-content" role="tabpanel" aria-hidden="true">
				<div class="card">
					<h2 class="card-title">Pricing & Registration</h2>
					<div class="form-group">
						<div style="display: flex; justify-content: space-between; align-items: center;">
							<label class="label">Registration Fields</label>
							<label class="switch">
								<input type="checkbox"/>
								<span class="slider"></span>
							</label>
						</div>
					</div>
					<div class="form-group">
						<div style="display: flex; justify-content: space-between; align-items: center;">
							<label class="label">Purchasable Items</label>
							<label class="switch">
								<input type="checkbox"/>
								<span class="slider"></span>
							</label>
						</div>
					</div>
					<div class="grid grid-2">
						<div class="form-group">
							<label class="label">Starting Price</label>
							<input class="input" type="number" step="0.01" placeholder="Enter starting price"/>
						</div>
						<div class="form-group">
							<label class="label">Currency</label>
							<select class="select">
								<option value="">Select currency</option>
								<option value="usd">USD</option>
								<option value="eur">EUR</option>
								<option value="gbp">GBP</option>
							</select>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class="card">
			<h2 class="card-title">System Information</h2>
			<div class="grid grid-2 system-info">
				<div>
					<p>Created At: 2024-01-01 12:00:00</p>
					<p>Updated At: 2024-01-01 12:00:00</p>
				</div>
				<div>
					<p>Event Source ID: ABC123</p>
					<p>Event Source Type: INTERNAL</p>
					<p>Updated By: admin@example.com</p>
				</div>
			</div>
		</div>
	</div>
	<script>
        // Tab switching
        const tabs = document.querySelectorAll('[role="tab"]');
        const panels = document.querySelectorAll('[role="tabpanel"]');

        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                // Deselect all tabs
                tabs.forEach(t => {
                    t.setAttribute('aria-selected', 'false');
                });
                // Hide all panels
                panels.forEach(p => {
                    p.setAttribute('aria-hidden', 'true');
                });

                // Select clicked tab
                tab.setAttribute('aria-selected', 'true');
                // Show corresponding panel
                const panelId = tab.getAttribute('aria-controls');
                document.getElementById(panelId).setAttribute('aria-hidden', 'false');
            });
        });

        // Tag management
        const tagInput = document.getElementById('tagInput');
        const tagsList = document.getElementById('tagsList');
        const ownersInput = document.getElementById('ownersInput');
        const ownersList = document.getElementById('ownersList');
        let tags = [];
        let owners =[];

        tagInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' && tagInput.value.trim() !== '') {
                const tag = tagInput.value.trim();
                tags.push(tag);
                renderTags();
                tagInput.value = '';
            }
        });

        function renderTags() {
            tagsList.innerHTML = tags.map(tag =>
                `<span class="tag" onclick="removeTag('${tag}')">${tag} x</span>`
            ).join('');
        }

        function removeTag(tagToRemove) {
            tags = tags.filter(tag => tag !== tagToRemove);
            renderTags();
        }

        ownersInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' && ownersInput.value.trim() !== '') {
                const owner = ownersInput.value.trim();
                owners.push(owner);
                renderOwners();
                ownersInput.value = '';
            }
        });

        function renderOwners() {
            ownersList.innerHTML = owners.map(owner =>
                `<span class="tag" onclick="removeOwner('${owner}')">${owner} x</span>`
            ).join('');
        }

        function removeOwner(ownerToRemove) {
            owners = owners.filter(owner => owner !== ownerToRemove);
            renderOwners();
        }
    </script>
}

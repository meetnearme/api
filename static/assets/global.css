@tailwind base;
@tailwind components;
@tailwind utilities;
@tailwind typography;
@tailwind layout;

@layer base {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: 'Grandstander', 'Helvetica', 'Arial', 'sans-serif';
    font-weight: 700;
  }
}

.brand {
  width: 2.5rem;
  height: 2.5rem;
}

.drawer-end .drawer-toggle ~ .drawer-side {
  z-index: 999;
}

.dropdown-content .collapse {
  padding: 0;
}
.dropdown-content .collapse .collapse-title {
  padding: 0;
  gap: 0;
}

.menu li > *:not(ul, .menu-title, details, .btn):active,
.menu li > *:not(ul, .menu-title, details, .btn).active,
.menu li > details > summary:active {
  background-color: transparent;
}

.menu :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  gap: 0;
  grid-auto-columns: initial;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.dropdown-content {
  width: max-content;
}

.dropdown-content.menu li {
  flex-direction: row;
}

.dropdown-content.menu .label {
  justify-content: flex-start;
}

.dropdown-content .collapse-title,
:where(.dropdown-content .collapse > input[type='checkbox']),
:where(.dropdown-content .collapse > input[type='radio']) {
  /* min-height: 0; */
  min-height: 1.5rem;
}

.htmx-indicator {
  display: none;
}

.htmx-request .htmx-indicator {
  display: inherit;
}

.htmx-show-in-flight {
  display: none;
}

.htmx-request .htmx-show-in-flight {
  display: inherit;
}

/* BEGIN seshu ingestion "add event source" section */

#event-source-steps .step {
  min-width: 15rem;
}

.checkbox-card {
  border: 2px solid oklch(var(--er));
}

.checkbox-card .checkbox-card-header {
  border-top-left-radius: var(--rounded-btn);
  border-top-right-radius: var(--rounded-btn);
}

.checkbox-card .checkbox-card-header .label {
  justify-content: center;
}

.checkbox-card .checkbox-card-header:has(input[type='checkbox']) {
  background-color: oklch(var(--er));
  color: oklch(var(--erc));
}

.checkbox-card .checkbox-card-header:has(input[type='checkbox']:checked) {
  background-color: oklch(var(--su));
  color: oklch(var(--suc));
}

.checkbox-card:has(input[id*='main-toggle-'][type='checkbox']:checked) {
  border-color: oklch(var(--su));
}

.has-toggleable-text:has(input[type='checkbox']) .hidden-when-checked {
  display: inherit;
}

.has-toggleable-text:has(input[type='checkbox']:checked) .hidden-when-checked {
  display: none;
}

.has-toggleable-text:not(:has(input[type='checkbox']:checked))
  .hidden-when-not-checked {
  display: none;
}

#event-source-container:not(:has(#event-candidates-inner .checkbox-card))
  .candidates-loaded-visible,
#event-source-container:has(#event-candidates-inner .checkbox-card)
  .candidates-loading-visible {
  height: 0;
  width: 0;
  opacity: 0;
  display: none;
}

#event-source-container:has(#event-candidates-inner .checkbox-card)
  #explainer-section
  .alert-info {
  background-color: oklch(var(--su));
}

/* END seshu ingestion "add event source" section */

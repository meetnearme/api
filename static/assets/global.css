@tailwind base;
@tailwind components;
@tailwind utilities;
@tailwind typography;
@tailwind layout;

@layer base {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: 'Outfit', 'Helvetica', 'Arial', 'sans-serif';
    font-weight: 400;
  }
}

@layer base {
  h1.title,
  h2.title,
  h3.title,
  h4.title,
  h5.title,
  h6.title {
    letter-spacing: 0.15rem;
    text-transform: uppercase;
  }
}

@layer components {
  .carousel-control-left {
    @apply no-animation absolute left-0 mr-8 -m-1 top-1/2 -translate-y-1/2 -translate-x-full;
  }
  .carousel-control-right {
    @apply no-animation absolute right-0 ml-8 -m-1 top-1/2 -translate-y-1/2 translate-x-full;
  }
}

body {
  padding-top: 5rem;
}

body:has(.bottom-drawer) {
  padding-bottom: 10rem;
}

.sticky-under-top-nav {
  top: 4.5rem;
}

.sticky-under-top-nav.subheader {
  top: 8.5rem;
}

.sticky-under-top-nav + *:first-child {
  margin-top: 4.5rem;
}

.brand-logo {
  width: 3rem;
  height: 4.5rem;
}

.brand-type {
  width: 8.2rem;
}

.drawer-end .drawer-toggle ~ .drawer-side {
  z-index: 999;
}

.menu .collapse .collapse-title {
  padding: 0;
  min-height: 1.75rem;
}

.menu .collapse-content {
  padding-left: 0;
  padding-right: 0;
  overflow: initial;
}

.menu :where(.menu li) {
  flex-wrap: nowrap;
}

.menu li > *:not(ul, .menu-title, details, .btn):active,
.menu li > *:not(ul, .menu-title, details, .btn).active,
.menu li > details > summary:active {
  background-color: transparent;
}

.menu :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)),
.menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  gap: 0;
  grid-auto-columns: initial;
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.dropdown-content {
  width: max-content;
}

.dropdown-content.menu li {
  flex-direction: row;
}

.dropdown-content.menu .label {
  justify-content: flex-start;
}

.dropdown-content .collapse-title,
:where(.dropdown-content .collapse > input[type='checkbox']),
:where(.dropdown-content .collapse > input[type='radio']) {
  /* min-height: 0; */
  min-height: 1.5rem;
}

.htmx-indicator {
  display: none;
}

.htmx-request .htmx-indicator {
  display: inherit;
}

.htmx-request .htmx-indicator.flex {
  display: flex;
}

.htmx-show-in-flight {
  display: none;
}

.htmx-request .htmx-show-in-flight {
  display: inherit;
}

.htmx-hide-in-flight {
  display: inherit;
}

.htmx-request .htmx-hide-in-flight {
  display: none;
}

.margins-when-children.my-8:has(*) {
  margin: 2rem 0;
}

/* BEGIN seshu ingestion "add event source" section */

#event-source-steps .step {
  min-width: 15rem;
}

.checkbox-card {
  border: 2px solid oklch(var(--er));
}

.checkbox-card .checkbox-card-header {
  border-top-left-radius: var(--rounded-btn);
  border-top-right-radius: var(--rounded-btn);
}

.checkbox-card .checkbox-card-header .label {
  justify-content: center;
}

.checkbox-card .checkbox-card-header:has(input[type='checkbox']) {
  background-color: oklch(var(--er));
  color: oklch(var(--erc));
}

.checkbox-card .checkbox-card-header:has(input[type='checkbox']:checked) {
  background-color: oklch(var(--su));
  color: oklch(var(--suc));
}

.checkbox-card:has(input[id*='main-toggle-'][type='checkbox']:checked) {
  border-color: oklch(var(--su));
}

.has-toggleable-text:has(input[type='checkbox']) .hidden-when-checked {
  display: inherit;
}

.has-toggleable-text:has(input[type='checkbox']:checked) .hidden-when-checked {
  display: none;
}

.has-toggleable-text:not(:has(input[type='checkbox']:checked))
  .hidden-when-not-checked {
  display: none;
}

#event-source-container:not(:has(#event-candidates-inner .checkbox-card))
  .candidates-loaded-visible,
#event-source-container:has(#event-candidates-inner .checkbox-card)
  .candidates-loading-visible {
  height: 0;
  width: 0;
  opacity: 0;
  display: none;
}

#event-source-container:has(#event-candidates-inner .checkbox-card)
  #explainer-section
  .alert-info {
  background-color: oklch(var(--su));
}

/* END seshu ingestion "add event source" section */

.bottom-drawer {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100%;
  z-index: 999;
  height: auto;
  /* TODO: FIX THIS! use tailwind variables */
  background: white;
  padding: 20px;
}

.btn.carousel-control-left:active:hover, .btn.carousel-control-left:active:focus {
  transform: translate(-100%, -50%)
}

.btn.carousel-control-right:active:hover, .btn.carousel-control-right:active:focus {
  transform: translate(100%, -50%)
}

.btn.btn-bold-outline {
  border: 5px solid oklch(var(--p));
}

.btn-outline.btn-primary.text-neutral-content {
  color: var(--fallback-nc, oklch(var(--nc) / var(--tw-text-opacity)));
}

.drawer .collapse-content :where(.menu li) {
  flex-direction: inherit;
  align-items: center;
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type='number'] {
  -moz-appearance: textfield;
}

.tab:is(input[type='radio']) {
  width: max-content;
}

.header-hero .opener {
  font-size: 125%;
}

.icon-container {
  display: inline-flex;
  justify-content: center;
  vertical-align: middle;
}

.page-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1.5rem;
}

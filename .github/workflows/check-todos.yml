name: Check for TODOs in Open PRs

on:
  push:

jobs:
  check-todos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for open PR
        id: check-pr
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            console.log('Full context:', JSON.stringify(context, null, 2));

            const owner = context.payload.repository.owner.name;
            const repo = context.payload.repository.name;
            const branch = context.payload.ref.replace('refs/heads/', '');

            console.log(`Checking for PR: owner="${owner}", repo="${repo}", branch="${branch}"`);
            console.log('GITHUB_REPOSITORY:', process.env.GITHUB_REPOSITORY);
            console.log('GITHUB_REF:', process.env.GITHUB_REF);

            if (!owner || !repo || !branch) {
              console.log('Error: Missing required information');
              return false;
            }

            try {
              const prs = await github.rest.pulls.list({
                owner: owner,
                repo: repo,
                head: `${owner}:${branch}`,
                state: 'open'
              });

              if (prs.data.length > 0) {
                console.log('Open PR found');
                return true;
              }
              console.log('No open PR found');
              return false;
            } catch (error) {
              console.log(`Error occurred: ${error.message}`);
              return false;
            }

      - name: Check for TODOs in Push
        if: steps.check-pr.outputs.result == 'true'
        id: todo-check
        run: |
          TODOS=$(git diff origin/${{ github.event.repository.default_branch }}..HEAD -U0 | grep '^+' | grep -E 'TODO:' || true)
          if [ ! -z "$TODOS" ]; then
            echo "todos_found=true" >> $GITHUB_OUTPUT
            echo "TODOS<<EOF" >> $GITHUB_OUTPUT
            echo "$TODOS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "todos_found=false" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR
        if:
          steps.check-pr.outputs.result == 'true' &&
          steps.todo-check.outputs.todos_found == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const owner = context?.payload?.repository?.owner?.name;
            const repo = context?.payload?.repository?.name;
            const branch = context.ref.replace('refs/heads/', '');

            async function commentOnPR() {
              try {
                const prs = await github.rest.pulls.list({
                  owner: owner,
                  repo: repo,
                  head: `${owner}:${branch}`,
                  state: 'open'
                });

                if (prs?.data?.length === 0) {
                  console.log('No open PR found');
                  return;
                }

                const pr = prs.data[0];
                const todoCheckOutputs = ${{ toJSON(steps.todo-check.outputs) }};

                console.log("todoCheckOutputs!", todoCheckOutputs);

                const todoLines = todoCheckOutputs.TODOS
                  .split('\n')
                  .filter(line => line.includes('TODO:') && !line.includes('$(git diff'))
                  .map(line => line.replace(/^\+/, '').trim());

                console.log('todoLines', todoLines);

                 // Get the diff
                const diff = await github.rest.pulls.get({
                  owner: owner,
                  repo: repo,
                  pull_number: pr.number,
                  mediaType: {
                    format: 'diff'
                  }
                });

                console.log('todoLines', todoLines);

                // Get the list of files changed in the PR
                const { data: files } = await github.rest.pulls.listFiles({
                  owner: owner,
                  repo: repo,
                  pull_number: pr.number
                });

                for (const file of files) {
                  const fileTodos = todoLines.filter(todo => file.patch.includes(todo));

                  for (const todo of fileTodos) {
                    const lines = file.patch.split('\n');
                    const todoLineIndex = lines.findIndex(line => line.includes(todo));

                    if (todoLineIndex !== -1) {
                      // Find the actual line number in the file
                      const lineNumber = file.patch.split('\n').slice(0, todoLineIndex + 1)
                        .filter(line => line.startsWith('+') || line.startsWith(' '))
                        .length;

                      await github.rest.pulls.createReviewComment({
                        owner: owner,
                        repo: repo,
                        pull_number: pr.number,
                        body: `Is this resolved?\n\nTODO found: ${todo}`,
                        commit_id: pr.head.sha,
                        path: file.filename,
                        start_line: lineNumber,
                        start_side: 'RIGHT'
                      });
                      console.log(`Comment added for TODO: ${todo}`);
                    }
                  }
                }

                console.log('All comments added successfully');

              } catch (error) {
                console.log(`Error occurred: ${error.message}`);
              }
            }

            await commentOnPR();

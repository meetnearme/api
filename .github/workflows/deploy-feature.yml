name: Deploy Feature Branch (SST)
on:
  push:
    branches:
      - feature/*

# Concurrency group name ensures concurrent workflow runs wait for any in-progress job to finish
concurrency:
  group: merge-${{ github.ref }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  DeployFeatureSST:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          # envkey_DEBUG: false
          # envkey_SOME_API_KEY: "123456abcdef"
          # envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          # envkey_VARIABLE: ${{ vars.SOME_ACTION_VARIABLE }}
          # some_other_variable: foobar
          # directory: <directory_name>
          file_name: .env
          fail_on_empty: false
          sort_keys: true
      # - name: Create env.json
      #   run: |
      #     echo "${{ toJSON(secrets) }}" > env.json
      #     echo "printing cat env.json below"
      #     echo $(cat env.json)
      # - name: convert-env-json
      #   uses: ricosandyca/convert-env-json@v1.0.1
      #   with:
      #     type: json-to-env
      #     input_path: env.json
      #     output_path: .env
      - name: Print debug
        run: |
          echo "printing ls -lah below"
          echo "$(ls -lah)"
          echo "printing cat .env below"
          echo "$(cat .env)"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::626762246796:role/GitHub
          role-duration-seconds: 1200 #adjust as needed for your build time
          aws-region: us-east-1
      - name: Extract branch name
        shell: bash
        run: |
          echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Deploy app
        # npm i && npx sst deploy --stage $stage-${{ steps.extract_branch.outputs.branch }}
        run: |
          npm i && npx sst deploy --stage prod
      - name: Second print debug
        run: |
          echo "printing cat .env below"
          echo "$(cat .env)"

name: set_aws_creds_env_vars
inputs:
  GIT_BRANCH_NAME:
    description: 'The name of the branch being deployed'
    required: false
  MEETNEARME_TEST_SECRET:
    description: 'The dummy secret for the MeetNearMe project'
    required: true
  SCRAPINGBEE_API_KEY:
    description: 'The API key for the ScrapingBee API'
    required: true
  GOOGLE_API_KEY:
    description: 'The API key for the Google API'
    required: true
  OPENAI_API_KEY:
    description: 'The API key for the OpenAI environment'
    required: true
  ZITADEL_CLIENT_ID:
    description: 'The client ID for zitadel auth'
    required: true
  ZITADEL_ENCRYPTION_KEY:
    description: 'The encryption key for zitadel auth'
    required: true
  ZITADEL_INSTANCE_URL:
    description: 'The client instance URL for zitadel auth'
    required: true
  APEX_URL:
    description:
      'The site apex URL, dynamic in lower environments, static in prod'
    required: true
  APEX_DEV_URL:
    description:
      'The site apex DEV URL, dynamic in lower environments, static in prod'
    required: true
runs:
  using: composite
  steps:
    - name: Make envfile
      shell: bash
      run: |
        touch .env
        echo GIT_BRANCH_NAME=${{ inputs.GIT_BRANCH_NAME }} >> .env
        echo MEETNEARME_TEST_SECRET=${{ inputs.MEETNEARME_TEST_SECRET }} >> .env
        echo SCRAPINGBEE_API_KEY=${{ inputs.SCRAPINGBEE_API_KEY }} >> .env
        echo GOOGLE_API_KEY=${{ inputs.GOOGLE_API_KEY }} >> .env
        echo OPENAI_API_KEY=${{ inputs.OPENAI_API_KEY }} >> .env
        echo ZITADEL_CLIENT_ID=${{ inputs.ZITADEL_CLIENT_ID }} >> .env
        echo ZITADEL_ENCRYPTION_KEY=${{ inputs.ZITADEL_ENCRYPTION_KEY }} >> .env
        echo ZITADEL_INSTANCE_URL=${{ inputs.ZITADEL_INSTANCE_URL }} >> .env
        echo APEX_URL=${{ inputs.APEX_URL }} >> .env
        echo APEX_DEV_URL=${{ inputs.APEX_DEV_URL }} >> .env
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::626762246796:role/GitHub
        role-duration-seconds: 1200 #adjust as needed for your build time
        aws-region: us-east-1

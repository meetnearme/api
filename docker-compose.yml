version: '3.8'

services:
  postgres:
    image: postgres:17.4-alpine3.21
    container_name: meetnearme-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT_HOST:-5433}:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.30.1
    container_name: meetnearme-weaviate
    ports:
      - "${WEAVIATE_PORT_HOST:-8080}:8080"
    restart: unless-stopped
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'false'
      AUTHENTICATION_APIKEY_ENABLED: 'true'
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: '${WEAVIATE_API_KEY_ALLOWED_KEYS}'
      AUTHENTICATION_APIKEY_USERS: '${WEAVIATE_API_KEY_USERS}'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE:
      ENABLE_MODULES:
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate_data:/var/lib/weaviate
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - ./.env

  go-app:
    build:
      context: .
      dockerfile: go-prod.Dockerfile
    container_name: meetnearme-go-app
    ports:
      - "${APP_PORT_HOST:-8000}:${APP_PORT:-8000}"
    environment:
      SST_STAGE: ${SST_STAGE:-DEV}
      DEPLOYMENT_TARGET: ${DEPLOYMENT_TARGET:-ACT}
      _LAMBDA_SERVER_PORT: ""
      AWS_LAMBDA_RUNTIME_API: ""
      APP_PORT: ${APP_PORT:-8000}

      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}

      WEAVIATE_SCHEME: http
      WEAVIATE_HOST: weaviate
      WEAVIATE_PORT: 8080
    env_file:
      - .env
    volumes:
      - ./docker_build/:/go-app
      - ./supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
      - ./.env:/app-static/.env
    depends_on:
      postgres:
        condition: service_healthy
      weaviate:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres_data:
  weaviate_data:

version: '3.8'

services:
  weaviate-test:
    image: cr.weaviate.io/semitechnologies/weaviate:1.30.1
    container_name: meetnearme-weaviate-test
    restart: unless-stopped
    volumes:
      - weaviate_test_data:/var/lib/weaviate
    env_file:
      - ./.env.test
    healthcheck:
      # This is a robust way to check if Weaviate is truly ready to accept requests
      test: ["CMD-SHELL", "wget -q --spider http://localhost:8080/v1/.well-known/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  t2v-transformers-test:
    image: cr.weaviate.io/semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
    container_name: meetnearme-t2v-transformers-test
    environment:
      ENABLE_CUDA: '0' # Set to '1' if you have a compatible GPU and NVIDIA drivers installed

  go-app-tester:
    container_name: meetnearme-go-app-tester
    build:
      context: .
      dockerfile: Dockerfile.go.test
    volumes:
      - .:/app
    working_dir: /app
    # command: ["go", "test", "-v", "-race", "-cover", "./functions/..."]
    command: sh -c "set -o pipefail && go test -v -race -cover ./functions/... 2>&1 | tee test-results.log"
    env_file:
      - ./.env.test
    environment:
      CGO_ENABLED: '1'
    depends_on:
      weaviate-test:
        # Now we can wait for the service to be healthy, which is more reliable
        condition: service_healthy
      t2v-transformers-test:
        condition: service_started

volumes:
  weaviate_test_data:
